<?xml version="1.0" encoding="utf-8"?>
<!--
 *
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" height="100%">
		
	<mx:VBox height="100%">
		<mx:Spacer height="2.5%"/>
		<mx:Button
			id="plusZoom"
			icon="{EmbeddedIcons.zoominIcon}"
			cornerRadius="5"
			width="25"
			height="25"
			click="zoomIn()"
			/>	
		<mx:VSlider height="100%"
			tickInterval=".25"
			id="bzoom"
			value="1"
			minimum=".25"
			maximum="2"
			liveDragging="true"
			change="updateVScale()"
			doubleClickEnabled="true"
			doubleClick="defaultZoom()"
			/>
		<mx:Button
			id="minusZoom"
			icon="{EmbeddedIcons.zoomoutIcon}"
			cornerRadius="5"
			width="25"
			height="25"
			click="zoomOut()"
			/>		
		<mx:Spacer height="2.5%"/>
	</mx:VBox>

	<mx:Script>
		<![CDATA[
			import org.un.cava.birdeye.ravis.graphLayout.visual.IVisualGraph;
			import org.un.cava.birdeye.ravis.utils.events.VGraphEvent;
			import org.un.cava.birdeye.ravis.graphLayout.visual.VisualGraph;
			import org.un.cava.birdeye.ravis.assets.icons.EmbeddedIcons;
			
			private var _vgraph:IVisualGraph;

			/**
			 * Provides access to the registered vgraph object.
			 * */
			public function set vgraph(v:IVisualGraph):void {
				_vgraph = v;
				registerListeners();
			}

			/**
			 * @private
			 * */
			public function get vgraph():IVisualGraph {
				return _vgraph;
			}
			
			public function zoomIn():void {
				if(bzoom.value + .10 < 2) {
					bzoom.value = bzoom.value + .10;
				} else {
					bzoom.value = 2;
				}
				updateVScale();
			}
			
			public function zoomOut():void {
				if(bzoom.value - .10 > .25) {
					bzoom.value = bzoom.value - .10;
				} else {
					bzoom.value = .25;
				}
				updateVScale();
			}
			
			public function defaultZoom():void {
				bzoom.value = 1;
				updateVScale();
			}
			
			/* update the scale of the VGraph, thus creating a BirdEye zoom effect */		
			public function updateVScale():void {
				if(bzoom == null) {
					return;
				}
				
				if(_vgraph == null) {
					trace("BirdEyeZoom NOT changed, no valid vgraph!");
					return;
				}
				_vgraph.scale = bzoom.value;
			}
			
			/* refresh the slider from the scaleX value */
			public function refreshVScale(e:VGraphEvent = null):void {
				if(bzoom == null) {
					return;
				}
				if(_vgraph == null) {
					trace("BirdEyeZoom NOT refreshed, no valid vgraph!");
					return;
				}
				bzoom.value = _vgraph.scale;
			}
			
			/**
			 * register listeners
			 * */
			private function registerListeners():void {
				_vgraph.addEventListener(VGraphEvent.VGRAPH_CHANGED,refreshVScale);
			}
		]]>
	</mx:Script>
</mx:VBox>
