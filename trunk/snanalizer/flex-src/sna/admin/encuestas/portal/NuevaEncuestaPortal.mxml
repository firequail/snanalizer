<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:valid="sna.validators.*" xmlns:ns1="sna.admin.encuestas.portal.*">
	<mx:states>
		<mx:State name="NuevaPregunta">
			<mx:RemoveChild target="{panel1}"/>
			<mx:AddChild position="lastChild">
				<ns1:NuevaPreguntaPortal id="nuevaPreguntaPortal" result="nuevaPreguntaResult(event)"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Metadata>
	   [ Event( name="result", type="mx.rpc.events.ResultEvent") ]
	</mx:Metadata>
	
	<mx:Binding source="nombre.text" destination="encuesta.nombre"/>
	
	<mx:RemoteObject id="encuestasService" destination="encuestasService" />
	
	<mx:Panel title="Nueva encuesta" width="100%" height="100%" id="panel1">
		<mx:Form id="form1" defaultButton="{okButton}" width="100%" height="100%">
			<mx:FormItem label="Nombre" tabIndex="1" width="100%">
				<mx:TextInput id="nombre" width="100%"/>
			</mx:FormItem>
			<mx:FormItem label="Preguntas" tabIndex="1" width="100%" height="100%">
				<mx:DataGrid id="preguntas" editable="true" dataProvider="{encuesta.preguntas}" width="100%" height="100%">
					<mx:columns>
						<mx:DataGridColumn headerText="DescripciÃ³n" dataField="descripcion" wordWrap="true"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:Button label="Nueva Pregunta" click="nuevaPregunta()"/>
			</mx:FormItem>
		</mx:Form>
		<mx:ControlBar horizontalAlign="right">
			<mx:Button id="okButton" label="OK" click="guardar()" tabIndex="2" />
			<mx:Button label="Cancelar" click="cancelar()" tabIndex="3" />
		</mx:ControlBar>
	</mx:Panel>
	
	<valid:RequiredText id="vnombre" source="{nombre}"/>
	
	<mx:Script>
		<![CDATA[
			import mx.validators.Validator;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var encuesta:EncuestaDePortal;
			
			public function init():void {
				encuesta = new EncuestaDePortal();
			}
			
			public function nuevaPregunta():void {
				this.currentState = "NuevaPregunta";
				nuevaPreguntaPortal.init();
			}
			
			public function nuevaPreguntaResult(event:ResultEvent):void {
				if ( nuevaPreguntaPortal.pregunta != null) {
					encuesta.preguntas.addItem(nuevaPreguntaPortal.pregunta);
				}
				this.currentState = "";
			}
			
			private function isValid():Boolean {
				return Validator.validateAll([vnombre]).length == 0;
			}
			
			public function guardar():void {
				if(isValid()) {
					encuestasService.crearEncuestaPortal(encuesta);
					dispatchEvent(ResultEvent.createEvent());
				}
			}
			
			public function cancelar():void {
				dispatchEvent(ResultEvent.createEvent());
			}
			
		]]>
	</mx:Script>
	
</mx:Canvas>
