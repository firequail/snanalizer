<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:sna="sna.*"  creationComplete="init();" showCloseButton="true" close="closeMe()" verticalAlign="middle" horizontalAlign="center" >
	<mx:Metadata>
	   [ Event( name="result", type="mx.rpc.events.ResultEvent") ]
	</mx:Metadata>
	
	<mx:RemoteObject id="encuestasService" destination="encuestasService"/>
	<mx:RemoteObject id="redesService" destination="redesService"/>
	

	<mx:Form height="100%" width="100%">
		<mx:Repeater id="rptPreguntas" dataProvider="{encuestasService.getPreguntasOf.lastResult}" >
			
			<mx:FormItem label="Pregunta:" width="100%">
				<mx:Text id="arrayPreguntas" text="{rptPreguntas.currentItem.descripcion}" width="100%"/>
			</mx:FormItem>
			<mx:HBox width="100%">
				<mx:FormItem label="Respuesta:" width="100%">
					<sna:DataComboBox id="arrayRespuestas" dataProvider="{redesService.getRecursosOf.lastResult}" dataField="id" labelFunction="getUsuarioNombre" unselectedLabel="Seleccione una respuesta"/>
				</mx:FormItem>
				<mx:FormItem label="Intensidad:" width="100%">
					<sna:DataComboBox id="arrayIntensidad" dataProvider="{obtenerIntMax()}"  />
				</mx:FormItem>
				<mx:TextInput width="0" height="0" id="arrayId" text="{rptPreguntas.currentItem.id}" visible="false" />
			</mx:HBox>
		</mx:Repeater>
	</mx:Form>

	<mx:Button  label="Grabar" click="save()" labelPlacement="left"/>

	
	
	
	<mx:Script>
		<![CDATA[
			import mx.controls.TextInput;
			import sna.admin.encuestas.Pregunta;
			import mx.rpc.events.ResultEvent;
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import sna.DataComboBox;
			import sna.portal.Portal;
			
			[Bindable]
			private var red:Object;
			[Bindable]
			private var rec:Object;
			[Bindable]
			public var arrayPreg:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var p:Portal;
			
			
			public function setRed(value:Object):void {
				red = value;
			}
			
			public function setPortal(value:Portal):void {
				p = value;
			}
			
			public function setRecurso(value:Object):void {
				rec = value;
			}
			
			public function getUsuarioNombre(data:Object):String {
				//Checkeo si es un usuario o el unselected label
				if(data.id != null) {
					return data.usuario.nombre;
				}
				return data.label;
			}
			
			private function closeMe():void {
				PopUpManager.removePopUp(this);
			}
			
			private function init():void {
				this.title = red.encuesta.nombre;
				encuestasService.getPreguntasOf(red.encuesta.id as int);
				redesService.getRecursosOf(red.id as int);
				
				
			}

			private function obtenerIntMax():ArrayCollection {
				var ints:ArrayCollection = new ArrayCollection();
				var cant:uint = rptPreguntas.currentItem.maximaIntensidad as int;
				
				for (var i:uint = 1; i <= cant; i++)
					ints.addItem(i);
					
				return ints;
			}
			
			private function save():void {

				var arrayRes:ArrayCollection = new ArrayCollection();
				var arrayInt:ArrayCollection = new ArrayCollection();
				
				var hola:String;
				hola = "";
				var cant:uint = arrayRespuestas.length;
				
				for (var i:uint = 0; i < cant; i++) {
					var currentRta:DataComboBox = arrayRespuestas[i];
					var currentInt:DataComboBox = arrayIntensidad[i];
					var currentId:TextInput = arrayId[i];
                    
                    arrayPreg.addItem(parseInt(currentId.text));
                    arrayRes.addItem(currentRta.selectedData);
                    arrayInt.addItem(parseInt(currentInt.selectedLabel));
				}
				
				redesService.generarRelaciones(red.id as int,rec.id as int, arrayPreg,arrayInt,arrayRes);
				p.actualizarEncPend();
				closeMe();
	
			}
			

						
		]]>
	</mx:Script>

</mx:TitleWindow>


